name: Backend CI

# This workflow runs essential checks on the backend Go application
# Integration tests that require AI API keys are skipped using -short flag

on:
  pull_request:
    paths:
      - "backend/**"
  push:
    branches: [main, develop]
    paths:
      - "backend/**"
  workflow_dispatch:

defaults:
  run:
    working-directory: ./backend

jobs:
  test:
    name: Test and Build
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: transaction_tracker_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"
          cache-dependency-path: backend/go.sum

      - name: Build Docker image
        run: docker build -t backend:ci .

      - name: Run linting
        run: |
          docker run --rm backend:ci golangci-lint run --timeout=5m

      - name: Vet check
        run: |
          docker run --rm backend:ci go vet ./...

      - name: Run tests in Docker container
        run: |
          export CGO_ENABLED=1
          docker run --rm \
            --network host \
            --env CI_SKIP_INTEGRATION=true \
            --env TEST_DB_HOST=127.0.0.1 \
            --env TEST_DB_PORT=3306 \
            --env TEST_DB_USER=root \
            --env TEST_DB_PASS=root \
            --env TEST_DB_NAME=transaction_tracker_test \
            backend:ci go test -v -race -coverprofile=coverage.out -covermode=atomic -short ./...

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: ./backend/coverage.out
          flags: backend
          name: backend-coverage

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            backend/coverage.out
