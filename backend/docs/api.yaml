openapi: 3.0.0
info:
  title: Transaction Tracker API
  description: RESTful API for tracking financial transactions
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local development server
paths:
  /health:
    get:
      summary: Health check endpoint
      description: Returns a status to verify the API is running
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  time:
                    type: string
                    example: 2025-06-12T10:00:00Z
  /api/v1/hello-world:
    get:
      summary: Hello World endpoint
      description: Test endpoint that requires authentication
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Hello, World!"
                  user:
                    type: string
                    example: "user123"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "429":
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/v1/login:
    post:
      summary: User login
      description: Authenticates a user and returns a JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: Successful login
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "429":
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/v1/extract-transactions:
    post:
      summary: Extract transactions from images
      description: Uploads one or more images and extracts transaction data using AI.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                images:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: One or more image files to process.
      responses:
        "200":
          description: Successful extraction
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExtractResponse"
        "400":
          description: Invalid request (e.g., no images uploaded, bad image format)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "429":
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error (e.g., AI processing failed)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    LoginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          example: "exampleUser"
        password:
          type: string
          example: "p@ssw0rd-example"
          format: password
    LoginResponse:
      type: object
      properties:
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: Invalid credentials
    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Operation completed successfully
    TransactionData:
      type: object
      properties:
        ticker:
          type: string
          example: "AAPL"
        exchange:
          type: string
          example: "NASDAQ"
        currency:
          type: string
          example: "USD"
        trade_date:
          type: string
          format: date
          example: "2024/06/14"
        trade_type:
          type: string
          enum: ["Buy", "Sell", "Dividends"]
          example: "Buy"
        quantity:
          type: number
          format: double
          example: 10.5
        price:
          type: number
          format: double
          example: 150.25
        trade_amount:
          type: number
          format: double
          example: 1577.625
    ExtractResponse:
      type: object
      properties:
        transactions:
          type: array
          items:
            $ref: "#/components/schemas/TransactionData"
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Transactions extracted successfully."
